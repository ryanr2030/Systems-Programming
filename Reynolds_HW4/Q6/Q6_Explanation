The code creates a child and a parent process. The child goes into the if==0 statement because i=0 for the child. The loop for loop is executed and j=10 at the end of the summation. The parent process executes the else statement because i!=0 it equals the PID of the child. j=wait() causes the parent process to hault from executing until the child process returns or exits (in this case returns). J becomes -1 because the child process' core has been dumped and the process no longer exists. The functionality of the code is to create a parent and a child process where the parent process waits to execute its code until after the child has finished.
